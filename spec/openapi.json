{
  "openapi": "3.1.0",
  "info": {
    "title": "backend",
    "description": "HTTP interface for the wildside backend",
    "version": "0.1.0",
    "license": {
      "name": "ISC",
      "url": "https://opensource.org/license/isc-license"
    }
  },
  "servers": [
    {
      "url": "https://{subdomain}.yourdomain.example",
      "description": "HTTP API",
      "variables": {
        "subdomain": {
          "default": "api",
          "enum": [
            "api",
            "staging",
            "dev"
          ]
        }
      }
    }
  ],
  "paths": {
    "/api/v1/users": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "listUsers",
        "summary": "List users",
        "description": "Return up to 100 known users in the system. The server enforces this temporary limit until cursor-based pagination is introduced.",
        "externalDocs": {
          "description": "Cursor-based pagination guideline",
          "url": "https://opensource.zalando.com/restful-api-guidelines/#153"
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users (maximum 100 items)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "maxItems": 100
                },
                "examples": {
                  "twoUsers": {
                    "summary": "Two users",
                    "value": [
                      {
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "display_name": "Ada Lovelace"
                      },
                      {
                        "id": "7b1d3a62-0e3d-4f2f-8f94-3a5b5db02f0f",
                        "display_name": "Alan Turing"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "users"
        ],
        "operationId": "login",
        "summary": "Log in",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "session"
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "ErrorCode": {
        "title": "Error code",
        "type": "string",
        "description": "Stable machine-readable error code",
        "example": "invalid_request",
        "pattern": "^[a-z0-9_.:-]+$",
        "enum": ["invalid_request", "unauthorized", "forbidden", "not_found", "internal_error"],
        "x-enumDescriptions": [
          "The request is malformed or fails validation",
          "Authentication failed or is missing",
          "Authenticated but not permitted to perform this action",
          "The requested resource does not exist",
          "An unexpected error occurred on the server"
        ]
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "description": "An error response",
        "additionalProperties": false,
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "message": {
            "type": "string",
            "description": "Human-readable error message",
            "example": "Something went wrong"
          },
          "trace_id": {
            "type": "string",
            "description": "Correlation identifier for tracing this error across systems",
            "example": "01HZY8B2W6X5Y7Z9ABCD1234"
          },
          "details": {
            "type": "object",
            "additionalProperties": true,
            "description": "Supplementary error details"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "User": {
        "title": "User",
        "type": "object",
        "description": "A user of the system",
        "additionalProperties": false,
        "required": [
          "id",
          "display_name"
        ],
        "properties": {
          "display_name": {
            "type": "string",
            "description": "User's display name",
            "example": "Ada Lovelace",
            "minLength": 1,
            "maxLength": 100
          },
          "id": {
            "type": "string",
            "description": "Stable user identifier",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "format": "uuid"
          }
        }
      },
      "LoginRequest": {
        "title": "LoginRequest",
        "type": "object",
        "description": "User login request",
        "additionalProperties": false,
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "example": "password"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "users",
      "description": "Operations about system users"
    }
  ]
}
