asyncapi: 3.0.0
info:
  title: myapp events
  description: Events emitted by the wildside backend
  version: 0.1.0
servers:
  production:
    host: ws.yourdomain.example
    protocol: wss
    pathname: /
    description: Production WebSocket server
channels:
  /ws:
    address: /ws
    messages:
      userCreated:
        $ref: '#/components/messages/UserCreated'
      invalidDisplayName:
        $ref: '#/components/messages/InvalidDisplayName'
      displayNameRequest:
        $ref: '#/components/messages/DisplayNameRequest'
operations:
  submitDisplayName:
    summary: Send a display name for validation
    description: >
      On validation failure, the server replies with InvalidDisplayName on the
      same channel. On success, no direct reply is sent; clients should await a
      subsequent UserCreated event. Implement client-side timeouts and retries
      as needed.
    action: send
    channel:
      $ref: '#/channels/~1ws'
    messages:
      - $ref: '#/channels/~1ws/messages/displayNameRequest'
    reply:
      channel:
        $ref: '#/channels/~1ws'
      messages:
        - $ref: '#/channels/~1ws/messages/invalidDisplayName'
    tags:
      - name: users
        description: Events about system users
  userCreated:
    summary: Receive UserCreated events
    action: receive
    channel:
      $ref: '#/channels/~1ws'
    messages:
      # Operation messages must reference channel-scoped names for validation
      - $ref: '#/channels/~1ws/messages/userCreated'
    tags:
      - name: users
        description: Events about system users
  invalidDisplayName:
    summary: Receive validation errors
    action: receive
    channel:
      $ref: '#/channels/~1ws'
    messages:
      - $ref: '#/channels/~1ws/messages/invalidDisplayName'
    tags:
      - name: users
        description: Events about system users
components:
  messages:
    UserCreated:
      name: UserCreated
      title: User created event
      contentType: application/json
      correlationId:
        description: Correlates UserCreated with prior client actions via payload.traceId
        location: "$message.payload#/traceId"
      payload:
        type: object
        additionalProperties: false
        required:
          - traceId
          - id
          - displayName
        properties:
          traceId:
            type: string
            description: Correlation identifier for tracing across systems
            format: uuid
          id:
            type: string
            description: Unique user identifier
            examples: ["123e4567-e89b-42d3-a456-426614174001"]
            format: uuid
          displayName:
            $ref: '#/components/schemas/DisplayName'
      examples:
        - name: minimal
          summary: Minimal valid message
          payload:
            traceId: "123e4567-e89b-42d3-a456-426614174000"
            id: "123e4567-e89b-42d3-a456-426614174001"
            displayName: "Ada Lovelace"
    InvalidDisplayName:
      name: InvalidDisplayName
      title: Invalid display name error
      contentType: application/json
      correlationId:
        description: Correlates this error with the triggering request via header traceId
        location: "$message.header#/traceId"
      headers:
        type: object
        additionalProperties: false
        required:
          - traceId
        properties:
          traceId:
            type: string
            description: Correlates this error with a prior request
            format: uuid
      payload:
        type: object
        additionalProperties: false
        required:
          - code
          - error
        properties:
          code:
            type: string
            description: Machine-readable validation code
            enum: [too_short, too_long, invalid_chars]
          error:
            type: string
            description: Reason the display name was rejected
          details:
            type: object
            description: Structured information about the validation failure
            additionalProperties: false
            properties:
              field:
                type: string
                description: The offending field path
                const: displayName
              value:
                type: string
                description: The offending value
              message:
                type: string
                description: Human-readable explanation
              code:
                type: string
                description: Machine-readable subcode
      examples:
        - name: invalid
          summary: Name failed validation
          headers:
            traceId: "123e4567-e89b-42d3-a456-426614174000"
          payload:
            code: invalid_chars
            error: >-
              Invalid display name. Only alphanumeric characters, spaces, and underscores are allowed. Length must be between 3 and 32 characters.
            details:
              field: displayName
              value: "@da!"
              message: Only alphanumeric characters, spaces, and underscores are allowed.
              code: invalid_chars
    DisplayNameRequest:
      name: DisplayNameRequest
      title: Display name submission
      contentType: application/json
      correlationId:
        location: "$message.payload#/traceId"
      description: >
        traceId MUST be unique for each submission attempt within a client-defined time window.
        The server treats duplicate traceId values as idempotent replays.
      payload:
        type: object
        additionalProperties: false
        required:
          - traceId
          - displayName
        properties:
          traceId:
            type: string
            description: Correlates this request with subsequent events
            format: uuid
          displayName:
            $ref: '#/components/schemas/DisplayName'
      examples:
        - name: valid
          summary: Valid display name
          payload:
            traceId: "123e4567-e89b-42d3-a456-426614174000"
            displayName: "Ada Lovelace"
  schemas:
    DisplayName:
      type: string
      description: User display name
      examples: ["Ada Lovelace"]
      # Keep in sync with backend/src/ws/display_name.rs
      minLength: 3
      maxLength: 32
      pattern: '^[A-Za-z0-9_ ]{3,32}$'
