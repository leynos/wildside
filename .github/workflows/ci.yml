name: ci
on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
      # v4.1.0
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v4
        with:
          node-version: '22'
          corepack: true
          cache: 'pnpm'
      - uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version: '1.2.21'

      - name: Compute dependency cache keys
        id: dependency-hashes
        shell: bash
        run: |
          set -euo pipefail

          if command -v sha256sum >/dev/null 2>&1; then
            pnpm_lock_hash=$(sha256sum pnpm-lock.yaml | awk '{print $1}')
          else
            pnpm_lock_hash=$(shasum -a 256 pnpm-lock.yaml | awk '{print $1}')
          fi

          frontend_hash=$(cd frontend-pwa && bun pm hash 2>/dev/null || echo 'no-frontend-lock')
          tokens_hash=$(cd packages/tokens && bun pm hash 2>/dev/null || echo 'no-tokens-lock')

          echo "modules=${pnpm_lock_hash}-${frontend_hash}-${tokens_hash}" >>"$GITHUB_OUTPUT"
          echo "bun=${frontend_hash}-${tokens_hash}" >>"$GITHUB_OUTPUT"

      - name: Cache workspace node_modules
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            node_modules
            node_modules/.pnpm-install-*
            frontend-pwa/node_modules
            packages/tokens/node_modules
          key: ${{ runner.os }}-modules-${{ steps.dependency-hashes.outputs.modules }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Cache Bun downloads
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            ~/.bun/install/cache
            ~/.bun/install/global
          key: ${{ runner.os }}-bun-${{ steps.dependency-hashes.outputs.bun }}
          restore-keys: ${{ runner.os }}-bun-

      - name: Install Rust toolchain
        uses: leynos/shared-actions/.github/actions/setup-rust@7f2d179056fc80b4ebc571ff83abc2ce898eb048

      - name: Install uv
        id: setup-uv
        # v6.4.3
        uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6
        with:
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Check lockfile consistency
        run: make lockfile
      - name: Install dependencies (frozen)
        run: make deps

      - name: Install Mermaid CLI
        run: |
          set -euxo pipefail
          bun install --global @mermaid-js/mermaid-cli@11.9.0
          bun x @puppeteer/browsers browsers install chrome-headless-shell
          mmdc --version

      - name: Debug Bun and Mermaid
        run: |
          set -euxo pipefail
          which mmdc
          mmdc --version
          bun --version

      - name: Audit
        run: make audit

      - name: Install Nixie
        run: uv tool install --from git+https://github.com/leynos/nixie nixie

      - name: Nixie
        run: make nixie

      - name: Markdown lint
        uses: DavidAnson/markdownlint-cli2-action@992badcdf24e3b8eb7e87ff9287fe931bcb00c6e # v20
        with:
          globs: |
            **/*.md
            !**/node_modules/**

      - name: Setup Helm
        # v4.3.1
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4
        with:
          version: v3.15.0

      - name: Install yamllint
        run: pip install yamllint==1.35.1

      - name: Helm lint
        run: helm lint --strict ./deploy/charts/wildside

      - name: YAML lint
        run: make yamllint

      - name: Type check
        run: make typecheck

      # Backend
      - name: Cache cargo
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Rust build
        run: cargo build --manifest-path backend/Cargo.toml --release
      - name: Rust fmt check
        run: cargo fmt --manifest-path backend/Cargo.toml --all -- --check
      - name: Rust clippy
        run: cargo clippy --manifest-path backend/Cargo.toml --all-targets --all-features -- -D warnings
      - name: Rust tests
        run: RUSTFLAGS="-D warnings" cargo test --manifest-path backend/Cargo.toml --all-targets --all-features

      # OpenAPI dump (at runtime or via a small bin)
      - name: Generate OpenAPI specification
        run: make openapi

      - name: Lint OpenAPI specification
        run: make lint-openapi

      # Frontend
      - name: Build tokens
        working-directory: packages/tokens
        run: |
          bun install
          bun run build
      - name: Build PWA
        working-directory: frontend-pwa
        run: |
          bun install
          bun run gen:api
          bun run build
