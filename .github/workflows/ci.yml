name: ci
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '22' }
      - uses: oven-sh/setup-bun@v1
        with: { bun-version: '1.1.x' }

      # Backend
      - name: Rust build
        run: |
          sudo apt-get update && sudo apt-get install -y musl-tools
          rustup target add x86_64-unknown-linux-musl
          cargo build --manifest-path backend/Cargo.toml --release --target x86_64-unknown-linux-musl

      # OpenAPI dump (at runtime or via a small bin)
      - name: Run backend to extract OpenAPI
        run: |
          mkdir -p spec
          # TODO: Replace with a small bin that prints ApiDoc JSON to stdout
          # cargo run --manifest-path backend/Cargo.toml --bin openapi-dump > spec/openapi.json
          # Temporary fallback to avoid breaking builds:
          test -s spec/openapi.json || echo '{"openapi":"3.0.3","info":{"title":"placeholder","version":"0.0.0"},"paths":{}}' > spec/openapi.json

      # Frontend
      - name: Build tokens & PWA
        run: |
          cd packages/tokens && bun install && bun run build
          cd ../../frontend-pwa && bun install && bun run build
